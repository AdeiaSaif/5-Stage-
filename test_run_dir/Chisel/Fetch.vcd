$date
2024-09-10T09:33+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module Fetch $end
 $var wire 1 ! _io_pc_out_T_9 $end
 $var wire 32 " io_inst_out $end
 $var wire 1 ' pc4 $end
 $var wire 7 ( _io_pc_out_T $end
 $var wire 32 ) io_imm $end
 $var wire 1 + _io_pc_out_T_4 $end
 $var wire 32 - io_inst $end
 $var wire 1 . clock $end
 $var wire 1 0 _io_pc_out_T_7 $end
 $var wire 1 2 _io_pc_out_T_10 $end
 $var wire 1 3 _io_pc_out_T_1 $end
 $var wire 32 4 io_pc_out $end
 $var wire 1 5 pc $end
 $var wire 1 ; reset $end
 $var wire 1 < _io_pc_out_T_3 $end
 $var wire 1 = _io_pc_out_T_6 $end
  $scope module pc4 $end
   $var wire 1 # reset $end
   $var wire 32 , pc $end
   $var wire 33 6 _pc_T $end
   $var wire 32 7 _pc_T_1 $end
   $var wire 1 8 clock $end
   $var wire 32 9 io_pc4_out $end
  $upscope $end
  $scope module pc $end
   $var wire 32 $ _pc_T $end
   $var wire 32 % _pc_T_2 $end
   $var wire 1 & reset $end
   $var wire 32 * pc $end
   $var wire 33 / _pc_T_1 $end
   $var wire 32 1 io_pc_out $end
   $var wire 32 : io_imm $end
   $var wire 1 > clock $end
  $upscope $end
$upscope $end
$enddefinitions $end
$dumpvars
0;
0&
0<
0'
0=
b0000000 (
0>
b00000000000000000000000000000000 7
0!
b00000000000000000000000000000000 "
08
0#
b00000000000000000000000000000000 9
b000000000000000000000000000000000 6
b00000000000000000000000000000000 :
b000000000000000000000000000000000 /
02
03
b00000000000000000000000000000000 4
05
0.
00
b00000000000000000000000000000000 1
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
0+
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 $
b00000000000000000000000000000000 -
b00000000000000000000000000000000 %
$end
#0
1&
1#
b000000000000000000000000000000100 6
b00000000000000000000000000000100 7
1;
#1
1.
18
1>
#6
b00000000001000001001001001100011 -
1<
b00000000000000000000000000010000 %
0.
0&
b1100011 (
b000000000000000000000000000010000 /
0>
b00000000000000000000000000010000 )
10
b00000000001000001001001001100011 "
08
0#
12
b00000000000000000000000000010000 $
1+
b00000000000000000000000000010000 :
0;
#11
b00000000000000000000000000100000 %
b00000000000000000000000000010000 4
b00000000000000000000000000010000 1
1.
18
b00000000000000000000000000010000 *
b00000000000000000000000000000100 9
b000000000000000000000000000001000 6
b00000000000000000000000000001000 7
b000000000000000000000000000100000 /
b00000000000000000000000000000100 ,
1>
#16
b00000000000000000000000000000000 -
0<
b00000000000000000000000000010000 %
b00000000000000000000000000000100 4
0.
b0000000 (
b000000000000000000000000000010000 /
0>
b00000000000000000000000000000000 )
00
b00000000000000000000000000000000 "
08
02
b00000000000000000000000000000000 $
0+
b00000000000000000000000000000000 :
#21
b00000000000000000000000000001000 4
1.
18
b00000000000000000000000000001000 9
b000000000000000000000000000001100 6
b00000000000000000000000000001100 7
b00000000000000000000000000001000 ,
1>
#26
0.
